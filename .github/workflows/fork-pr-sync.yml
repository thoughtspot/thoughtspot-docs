name: Handle Fork PR Sync

# Concurrency control for fork PR handling
concurrency:
  group: fork-pr-sync-${{ github.repository }}
  cancel-in-progress: false

on:
  pull_request_target:
    types: [closed]

jobs:
  trigger-sync:
    # Only run for PRs from forks that were actually merged, not internal branches
    if: github.event.pull_request.merged == true && github.event.pull_request.head.repo.full_name != github.repository
    runs-on: ubuntu-latest
    steps:
      - name: Log Fork PR Details
        run: |
          echo "Fork PR merged from: ${{ github.event.pull_request.head.repo.full_name }}"
          echo "Target branch: ${{ github.event.pull_request.base.ref }}"
          echo "PR number: ${{ github.event.pull_request.number }}"
          echo "PR title: ${{ github.event.pull_request.title }}"

      - name: Trigger Sync Workflow
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const response = await github.rest.repos.createDispatchEvent({
              owner: context.repo.owner,
              repo: context.repo.repo,
              event_type: 'sync-public-mirror',
              client_payload: {
                branch: context.payload.pull_request.base.ref,
                pr_number: context.payload.pull_request.number,
                source_repo: context.payload.pull_request.head.repo.full_name,
                trigger_source: 'fork-pr'
              }
            });
            
            console.log('Repository dispatch event created successfully');
            console.log('Event type: sync-public-mirror');
            console.log('Target branch:', context.payload.pull_request.base.ref);
